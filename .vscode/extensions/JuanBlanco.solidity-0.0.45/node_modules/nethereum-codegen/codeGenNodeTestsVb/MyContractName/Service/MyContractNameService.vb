Imports System
Imports System.Threading.Tasks
Imports System.Numerics
Imports Nethereum.Hex.HexTypes
Imports Nethereum.ABI.FunctionEncoding.Attributes
Imports Nethereum.Web3
Imports Nethereum.RPC.Eth.DTOs
Imports Nethereum.Contracts.CQS
Imports System.Threading
Imports StandardToken.MyContractName.CQS
Imports StandardToken.MyContractName.DTOs
Namespace StandardToken.MyContractName.Service


    Public Class MyContractNameService
    
    
        Public Shared Function DeployContractAndWaitForReceiptAsync(ByVal web3 As Web3, ByVal myContractNameDeployment As MyContractNameDeployment, ByVal Optional cancellationTokenSource As CancellationTokenSource = Nothing) As Task(Of TransactionReceipt)
        
            Return web3.Eth.GetContractDeploymentHandler(Of MyContractNameDeployment)().SendRequestAndWaitForReceiptAsync(myContractNameDeployment, cancellationTokenSource)
        
        End Function
         Public Shared Function DeployContractAsync(ByVal web3 As Web3, ByVal myContractNameDeployment As MyContractNameDeployment) As Task(Of String)
        
            Return web3.Eth.GetContractDeploymentHandler(Of MyContractNameDeployment)().SendRequestAsync(myContractNameDeployment)
        
        End Function
        Public Shared Async Function DeployContractAndGetServiceAsync(ByVal web3 As Web3, ByVal myContractNameDeployment As MyContractNameDeployment, ByVal Optional cancellationTokenSource As CancellationTokenSource = Nothing) As Task(Of MyContractNameService)
        
            Dim receipt = Await DeployContractAndWaitForReceiptAsync(web3, myContractNameDeployment, cancellationTokenSource)
            Return New MyContractNameService(web3, receipt.ContractAddress)
        
        End Function
    
        Protected Property Web3 As Web3
        
        Protected Property ContractHandler As ContractHandler
        
        Public Sub New(ByVal web3 As Web3, ByVal contractAddress As String)
            Web3 = web3
            ContractHandler = web3.Eth.GetContractHandler(contractAddress)
        End Sub
    
        Public Function Name2QueryAsync(ByVal name2Function As Name2Function, ByVal Optional blockParameter As BlockParameter = Nothing) As Task(Of String)
        
            Return ContractHandler.QueryAsync(Of Name2Function, String)(name2Function, blockParameter)
        
        End Function
        Public Function NameQueryAsync(ByVal nameFunction As NameFunction, ByVal Optional blockParameter As BlockParameter = Nothing) As Task(Of String)
        
            Return ContractHandler.QueryAsync(Of NameFunction, String)(nameFunction, blockParameter)
        
        End Function
        Public Function Hello5RequestAsync(ByVal hello5Function As Hello5Function) As Task(Of String)
                    
            Return ContractHandler.SendRequestAsync(hello5Function)
        
        End Function
        Public Function Hello5RequestAndWaitForReceiptAsync(ByVal hello5Function As Hello5Function, ByVal Optional cancellationToken As CancellationTokenSource = Nothing) As Task(Of TransactionReceipt)
        
            Return ContractHandler.SendRequestAndWaitForReceiptAsync(hello5Function, cancellationToken)
        
        End Function
        Public Function OwnerQueryAsync(ByVal ownerFunction As OwnerFunction, ByVal Optional blockParameter As BlockParameter = Nothing) As Task(Of String)
        
            Return ContractHandler.QueryAsync(Of OwnerFunction, String)(ownerFunction, blockParameter)
        
        End Function
        Public Function TransferOwnershipRequestAsync(ByVal transferOwnershipFunction As TransferOwnershipFunction) As Task(Of String)
                    
            Return ContractHandler.SendRequestAsync(transferOwnershipFunction)
        
        End Function
        Public Function TransferOwnershipRequestAndWaitForReceiptAsync(ByVal transferOwnershipFunction As TransferOwnershipFunction, ByVal Optional cancellationToken As CancellationTokenSource = Nothing) As Task(Of TransactionReceipt)
        
            Return ContractHandler.SendRequestAndWaitForReceiptAsync(transferOwnershipFunction, cancellationToken)
        
        End Function
    
    End Class

End Namespace
